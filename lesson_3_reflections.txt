When would you want to use a remote repository rather than keeping all your work local?

If you were working in teams, where several people may want to push changes to the repository. When you are working on more that one PC.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because there may be changes made to the remote respository that conflict with your own changes.


Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are used on GitHub to duplicate a repository. This is useful for when you don't have permission to change a project, but want to make changes.
Cloning is where you duplicate the repository onto your local computer from GitHub or from another part of the computer. It is useful when you want to start working on a project on your computer.
Branching is where you have code which is not part of the main master branch. This is useful when you want to experiemnt or work on a feature.


What is the benefit of having a copy of the last known state of the remote stored locally?

The benefit is that you can work offline on that copy.


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

You would need to have the other person send you their code themselves, and attempt to merge their changes manually. This would take far more time, but it may help you understand their changes better as you would have to go through it. It would also be much harder to experiment with your code and easily revert back changes.


When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You would want to make changes in a separate branch when you are experimenting with a new feature. This may be code that could break the system, so you want to test in another branch before you merge into master.
